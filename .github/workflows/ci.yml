name: CI

on:
  push:
    branches: '*'
    tags: v*
  pull_request:
    branches:
      - master

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm install
      - run: npm run all

  test: # make sure the action works on a clean machine without building
    name: ${{ matrix.os.name }} ${{ matrix.os.architecture }} ${{ matrix.os.version }} on ${{ matrix.os.host }}
    runs-on: ${{ matrix.os.host }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: FreeBSD
            version: '12.2'
            host: macos-12
            workDirectory: /Users/runner/work/action/action
            uname:
              hardware: amd64
              release: 12.2-RELEASE

          - name: FreeBSD
            version: '12.2'
            host: ubuntu-latest
            # /home is symlinked to /usr/home. pwd will return the resolved path.
            workDirectory: /usr/home/runner/work/action/action
            uname:
              hardware: amd64
              release: 12.2-RELEASE

          - name: FreeBSD
            version: '13.0'
            host: macos-12
            workDirectory: /Users/runner/work/action/action
            uname:
              hardware: amd64
              release: 13.0-RELEASE

          - name: FreeBSD
            version: '13.0'
            host: ubuntu-latest
            # /home is symlinked to /usr/home. pwd will return the resolved path.
            workDirectory: /usr/home/runner/work/action/action
            uname:
              hardware: amd64
              release: 13.0-RELEASE

          - name: OpenBSD
            version: '6.8'
            host: macos-12
            workDirectory: /Users/runner/work/action/action
            uname:
              hardware: amd64

          - name: OpenBSD
            version: '6.8'
            host: ubuntu-latest
            workDirectory: /home/runner/work/action/action
            uname:
              hardware: amd64

          - name: OpenBSD
            version: '6.9'
            host: macos-12
            workDirectory: /Users/runner/work/action/action
            uname:
              hardware: amd64

          - name: OpenBSD
            version: '6.9'
            host: ubuntu-latest
            workDirectory: /home/runner/work/action/action
            uname:
              hardware: amd64

          - name: OpenBSD
            version: '7.1'
            host: macos-12
            workDirectory: /Users/runner/work/action/action
            uname:
              hardware: amd64

          - name: OpenBSD
            version: '7.1'
            host: ubuntu-latest
            workDirectory: /home/runner/work/action/action
            uname:
              hardware: amd64

          - name: OpenBSD
            architecture: arm64
            version: '7.1'
            host: ubuntu-latest
            workDirectory: /home/runner/work/action/action
            uname:
              hardware: arm64

          - name: NetBSD
            version: '9.2'
            host: ubuntu-latest
            workDirectory: /home/runner/work/action/action
            uname:
              hardware: amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      # - name: Setup SSH session
      #   uses: lhotari/action-upterm@v1

      - name: ${{ matrix.os.name }}
        uses: ./
        env:
          FOO: A
          BAR: B
        with:
          environment_variables: FOO BAR
          operating_system: ${{ matrix.os.name }}
          architecture: ${{ matrix.os.architecture }}
          version: '${{ matrix.os.version }}'
          run: |
            uname -a
            echo $SHELL
            pwd
            ls -lah
            whoami
            env | sort
            [ "`uname -s`" = '${{ matrix.os.name }}' ]
            [ "`uname -r`" = '${{ matrix.os.uname.release || matrix.os.version }}' ]
            [ "`uname -m`" = '${{ matrix.os.uname.hardware }}' ]
            [ "`pwd`" = '${{ matrix.os.workDirectory }}' ]
